【Spring面试题】：7.Spring中用到的设计模式
单例模式：Spring 中的 Bean 默认为单例模式，即容器中只有一个实例。
工厂模式：Spring 中使用 BeanFactory 或 ApplicationContext 等容器来管理和创建对象，
这些容器就是工厂模式的具体实现。

代理模式：Spring 中的 AOP 就是通过 JDK 动态代理和 CGLib 代理等实现的。
这种模式通过代理对象来对目标对象进行增强，达到扩展功能、降低耦合度的目的。

观察者模式：Spring 中事件驱动模型就是通过观察者模式来实现的。
当事件发生时，被观察者（发布者）会通知观察者（订阅者），从而实现消息的传递。

模板方法模式：Spring 中的 JdbcTemplate 等模板类都是基于模板方法模式实现的。
这种模式通过定义算法框架和具体实现来实现代码的复用。

适配器模式：Spring 中的适配器模式主要用于将老接口适配到新接口上，
使得原本不兼容的接口可以协同工作。

策略模式：Spring 中的策略模式主要体现在处理器映射（Handler Mapping）中，
通过不同的策略来选择对应的处理器。这种模式可以使系统更加灵活，易于扩展。

装饰器模式：Spring 中的装饰器模式主要用于在不改变原有类的情况下增加额外的功能，
例如 Spring 中的 BeanWrapperImpl 就是一个装饰器。
微信公众号关注科技青莲获取面试资料
