【Java】描述一下线程安全活跃态问题，以及竞态条件？
活跃性问题通常指的是死锁、饥饿和活锁等问题。
一、死锁指的是两个或多个线程互相持有对方所需要的锁，从而导致彼此都无法继续执行；
解决方案：破坏死锁环路的方法包括撤销进程、强制抢占资源和超时等待等。
常见的死锁检测和恢复算法包括银行家算法、死锁检测图算法和超时重试等。
二、饥饿指的是某个线程一直无法获取所需的锁，从而无法执行；
解决方案：提高线程优先级、使用公平锁、减少锁的持有时间、采用非阻塞算法
三、活锁指的是多个线程一直在相互响应，但是却无法进展。
解决方案：
改变算法逻辑、引入随机性、、线程优先级控制、回退重试。
