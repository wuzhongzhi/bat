【JVM面试题】：ZGC
ZGC（Z Garbage Collector）是 JDK 11 引入的一种可伸缩低延迟垃圾收集器，
其主要特点是非常短的垃圾收集停顿时间和能够处理非常大的堆。其收集过程主要包括以下步骤：
初始标记（Initial Mark）：暂停所有应用线程，标记出 GC Roots 直接关联的对象，
标记出每个 Region 中第一次被直接关联的对象，并记录这些对象的存活状态。
此阶段需要停顿应用线程，但停顿时间极短，通常只需要几毫秒。
并发标记（Concurrent Mark）：并发标记阶段，应用线程可以继续运行，
GC 线程扫描整个堆，标记出所有存活的对象。该过程需要遍历整个对象图，
可能需要数百毫秒到数秒不等的时间。此过程不需要停顿应用线程，GC 线程和应用线程并发运行。
重新标记（Remark）：在应用程序继续运行时，可能会有一些对象在上一个阶段标记为存活，
但在此阶段被回收的情况。因此，需要重新扫描堆，并标记这些对象的状态。
此阶段需要停顿应用线程，但通常只需要几毫秒。
并发清理（Concurrent Sweep）：在并发标记和重新标记阶段之后，
GC 线程清理出所有未被标记的对象，并重新利用这些内存。这个过程是与应用程序并发进行的，
不需要停顿应用程序。
最终标记（Final Mark）：在并发清理之后，需要重新扫描堆并标记任何在清理过程中新创建的对象
。此阶段需要停顿应用线程，但通常只需要几毫秒。
并发清理（Concurrent Sweep）：在最终标记之后，GC 线程再次清理出所有未被标记的对象，
并重新利用这些内存。此过程与应用程序并发进行，不需要停顿应用程序。
微信公众号关注科技青莲获取面试资料
