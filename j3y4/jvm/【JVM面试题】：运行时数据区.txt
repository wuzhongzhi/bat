【JVM面试题】：运行时数据区
程序计数器（Program Counter Register）：记录当前线程执行的字节码地址，
是线程私有的内存区域，每个线程都有一个独立的程序计数器。
Java虚拟机栈（JVM Stack）：每个线程都有一个私有的JVM栈，随着线程的创建而创建，
存储局部变量表、操作数栈、方法出口等信息。
在Java虚拟机栈中的栈帧，用于存储局部变量、操作数栈、动态链接、方法出口等信息。
本地方法栈（Native Method Stack）：类似于Java虚拟机栈，用于支持Java虚拟机调用Native方法。
Java堆（Java Heap）：Java虚拟机管理的最大的一块内存区域，用于存放对象实例以及数组。
Java堆是所有线程共享的一块内存区域，在堆中分配对象时需要考虑垃圾收集器的回收策略等因素。
方法区（Method Area）：用于存储已经被虚拟机加载的类信息、常量、静态变量、
即时编译器编译后的代码等数据。方法区是所有线程共享的一块内存区域，
也称为永久代（Permanent Generation）。
运行时常量池（Runtime Constant Pool）：用于存储编译器生成的各种字面量和符号引用。
直接内存（Direct Memory）：与Java堆不同的是，
直接内存并不是Java虚拟机运行时数据区的一部分，但是，这部分内存也被频繁地使用。
直接内存是在JVM外部分配的内存，通过NIO可以在Java中使用直接内存。
微信公众号关注科技青莲获取面试资料
